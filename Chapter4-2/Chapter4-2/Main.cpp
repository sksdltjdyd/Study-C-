#include "main_header.h"
#include "Animal.h"
#include "person.h"

/*
암무적인 룰
- 일반적으로 많은 C++개발자는 헤더파일 한개와 소스파일 한개를 이용해 클래스를 정의하여 사용한다
- 즉 한개의 클래스는 한개의 헤더파일과 한개의 소스파일을 갖게 된다
- 이것은 언어에서 강제하는 사항은 아니지만 그렇게 하는것이 미덕이다
*/

/*
클래스의 멤버함수 분리
- 클래스에서 멤버함수의 선언과 정의를 분리하기 위해서는 클래스에는 함수의 선언부분만 남겨둔 이후에 소스파일에서 해당 클래스의 함수를 정의하면 된다
- 클래스명::멤버함수명(파라미터){
...
}
*/

int main() {
	Animal* a = new Animal(4, "소");

	a->printinfo();

	// 실행불가 -> 클래스 두개가 중복으로 정의됐기 때문이다. 그래서 매크로로 중복정의를 방지해야 한다
	Person* p = new Person("1234", "이서용");
	p->printinfo();

	// foo();

	return 0;
}

// 이렇게 선언하는 이유가 함수가 작동하는 곳이 메인 함수가 있는 곳이 아닐 수도 있기 때문이다
// 이렇게 분리하여 선언 하면 함수의 위치와 상관없이 메인 함수에서 실행 할수가 있다

int count;

void foo() {
		printf("Hello word\n");
}